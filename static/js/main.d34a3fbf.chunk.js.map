{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","caesarShiftEncode","str","amount","parseInt","output","i","length","c","match","code","charCodeAt","count","String","fromCharCode","caesarShiftDecode","scrollToBottom","window","scrollTo","top","behavior","state","encodeString","encodeKey","encodeOutput","decodeString","decodeKey","decodeOutput","handleEncodeString","bind","handleEncodeKey","handleSubmitEncode","handleDecodeString","handleDecodeKey","handleSubmitDecode","setTimeout","setState","event","this","target","value","caesar","className","onClick","type","name","id","onChange","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d34a3fbf.chunk.js","sourcesContent":["import './App.scss';\n\nimport React from 'react'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      encodeString: \"\",\n      encodeKey: \"\",\n      encodeOutput: \"\",\n      decodeString: \"\",\n      decodeKey: \"\",\n      decodeOutput: \"\"\n    }\n    this.handleEncodeString = this.handleEncodeString.bind(this)\n    this.handleEncodeKey = this.handleEncodeKey.bind(this)\n    this.handleSubmitEncode = this.handleSubmitEncode.bind(this)\n    this.caesarShiftEncode = this.caesarShiftEncode.bind(this)\n    this.handleDecodeString = this.handleDecodeString.bind(this)\n    this.handleDecodeKey = this.handleDecodeKey.bind(this)\n    this.handleSubmitDecode = this.handleSubmitDecode.bind(this)\n    this.caesarShiftDecode = this.caesarShiftDecode.bind(this)\n  }\n\n  // encode\n  caesarShiftEncode = (str, amount) => {\n    amount = parseInt(amount)\n    if (amount < 0) {\n      amount += 26\n    }\n\n    let output = \"\";\n\n    for (let i = 0; i < str.length; i++) {\n      let c = str[i];\n\n      if (c.match(/[a-z]/i)) {\n        let code = str.charCodeAt(i);\n\n        if (code >= 65 && code <= 90) {\n          let count = ((code - 65 + amount) % 26) + 65\n          c = String.fromCharCode(count);\n        }\n        if (code >= 97 && code <= 122) {\n          c = String.fromCharCode(((code - 97 + amount) % 26) + 97);\n        }\n      }\n      output += c;\n    }\n    return output;\n  }\n\n  handleSubmitEncode() {\n    setTimeout(() => {\n      //your code to be executed after 1 second\n      let str = this.state.encodeString\n      let amount = this.state.encodeKey\n      this.setState({\n        encodeOutput: this.caesarShiftEncode(str, amount)\n      })\n    }, 1000);\n  }\n\n  handleEncodeKey(event) {\n    this.setState({\n      encodeKey: event.target.value\n    })\n  }\n\n  handleEncodeString(event) {\n    this.setState({\n      encodeString: event.target.value\n    })\n  }\n\n  // decode\n  caesarShiftDecode = (str, amount) => {\n    amount = parseInt(amount)\n    if (amount < 0) {\n      amount += 26\n    }\n\n    let output = \"\";\n\n    for (let i = 0; i < str.length; i++) {\n      let c = str[i];\n\n      if (c.match(/[a-z]/i)) {\n        let code = str.charCodeAt(i);\n\n        if (code >= 65 && code <= 90) {\n          c = String.fromCharCode(((code - 65 + amount) % 26) + 65);\n        }\n        if (code >= 97 && code <= 122) {\n          c = String.fromCharCode(((code - 97 + amount) % 26) + 97);\n        }\n      }\n      output += c;\n    }\n    return output;\n  }\n\n  handleSubmitDecode() {\n    let str = this.state.decodeString\n    let amount = this.state.decodeKey\n\n    let caesar = this.caesarShiftDecode(str, amount)\n    this.setState({\n      decodeOutput: caesar\n    })\n  }\n\n  handleDecodeKey(event) {\n    this.setState({\n      decodeKey: event.target.value\n    })\n  }\n\n  handleDecodeString(event) {\n    this.setState({\n      decodeString: event.target.value\n    })\n  }\n\n  scrollToBottom = () => {\n    window.scrollTo({\n      top: 700,\n      behavior: 'smooth'\n      /* you can also use 'auto' behaviour\n         in place of 'smooth' */\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"welcomePage\">\n          <div className=\"overlay\"></div>\n          <h1>Encrypt-Verter</h1>\n          <h4>Rahasiakan Pesanmu dengan Sekali Klik!</h4>\n          <button onClick={this.scrollToBottom} >Mulai</button>\n        </div>\n        <div className=\"mainPage\">\n          <div className=\"encryptSection\">\n            {/* encoding */}\n            <h1>Enkripsi</h1>\n            <p>Enkripsi adalah proses teknis yang mengonversikan informasi menjadi kode rahasia, sehingga mengaburkan data yang Anda kirim, terima, atau simpan.</p>\n            <div className=\"inputWrapper\">\n\n              <input type=\"number\" name=\"encodeKey\" id=\"encodeKey\" className=\"key\" value={this.state.encodeKey} onChange={this.handleEncodeKey} placeholder=\"Masukkan Key\" />\n\n              <input type=\"text\" name=\"encodeString\" id=\"encodeString\" value={this.state.encodeString} className=\"string\" onChange={this.handleEncodeString} placeholder=\"Ketik Pesan Anda\" />\n            </div>\n\n            {/* <button value=\"Submit\" onClick={this.handleSubmitEncode}>Submit</button> */}\n\n            <h4>Hasil Enkripsi</h4>\n\n            <p className=\"output\"> {this.caesarShiftEncode(this.state.encodeString, this.state.encodeKey)} </p>\n          </div>\n          <div className=\"decryptSection\">\n            {/* decoding */}\n            <h1>Dekripsi</h1>\n            <p>Dekripsi adalah kebalikan dari enkripsi yaitu mengubah kembali kode rahasia yang telah dikaburkan menjadi informasi yang dapat dipahami.</p>\n            <div className=\"inputWrapper\">\n              <input type=\"number\" className=\"key\" name=\"decodeKey\" id=\"decodeKey\" value={this.state.decodeKey} onChange={this.handleDecodeKey} placeholder=\"Masukkan Key\" />\n\n              <input type=\"text\" className=\"string\" name=\"decodeString\" id=\"decodeString\" value={this.state.decodeString} onChange={this.handleDecodeString} placeholder=\"Ketik Pesan Anda\" />\n\n            </div>\n\n            {/* <button value=\"Submit\" onClick={this.handleSubmitDecode}>Submit</button> */}\n            <h4>Hasil Dekripsi</h4>\n            <p className=\"output\"> {this.caesarShiftDecode(this.state.decodeString, -1 * this.state.decodeKey)}</p>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <p>Copyright by Kelompok 3</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}